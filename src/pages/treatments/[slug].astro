---
import type { GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';
import PageLayout from '~/layouts/PageLayout.astro';
import Hero from '~/components/widgets/Hero.astro';
import Content from '~/components/widgets/Content.astro';
import Image from '~/components/common/Image.astro';
import { getCollection } from 'astro:content';

export const getStaticPaths: GetStaticPaths = async () => {
  const treatments = await getCollection('treatments');
  return treatments.map((treatment) => ({
    params: { slug: treatment.slug },
    props: { treatment },
  }));
};

interface Props {
  treatment: CollectionEntry<'treatments'>;
}

const { treatment } = Astro.props as Props;
const { Content: MDXContent } = await treatment.render();
---

<PageLayout>
  <Hero class="hero-section md:h-screen" title={treatment.data.title} subtitle={treatment.data.description}>
    <Fragment slot="bg">
      <div class="absolute inset-0 size-full bg-black opacity-50"></div>
      <Image
        class="relative size-full z-[-1] hero-image"
        objectPosition="60% 10%"
        aspectRatio="auto"
        loading="eager"
        src={treatment.data.heroImage.src}
        alt={treatment.data.heroImage.alt}
        style={`view-transition-name: ${treatment.data.heroImage.id}`}
      />
    </Fragment>
  </Hero>

  <div class="prose dark:prose-invert max-w-none">
    <MDXContent />
  </div>

  <Content
    title="Key Benefits"
    items={treatment.data.benefits.map((benefit) => ({
      title: benefit,
      description: '',
    }))}
    columns={1}
    isDark={treatment.data.isDark}
  />
</PageLayout>
