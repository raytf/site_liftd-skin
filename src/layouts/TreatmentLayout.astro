---
import PageLayout from './PageLayout.astro';
import Hero from '~/components/widgets/Hero.astro';
import Carousel from '~/components/ui/Carousel.astro';
import FAQ from '~/components/widgets/FAQ.astro';
import TreatmentAreas from '~/components/widgets/TreatmentAreas.astro';
import { Image } from 'astro:assets';
import { urlFor, getImageDimensions } from '~/sanity/lib/image';

const {
  treatmentId,
  title = await Astro.slots.render('title'),
  description = await Astro.slots.render('description'),
  heroImage = await Astro.slots.render('hero-image'),
  treatmentAreas = await Astro.slots.render('treatment-areas'),
  treatmentAreasImage = await Astro.slots.render('treatment-areas-image'),
  beforeAfterImages = await Astro.slots.render('before-after-images'),
  faqItems = await Astro.slots.render('faq-items'),
} = Astro.props;

const metadata = {
  title: title,
};

// Get image dimensions using Sanity's helper
const dimensions = getImageDimensions(heroImage);
if (!dimensions) {
  throw new Error('Could not get image dimensions for hero image');
}

const { width, height } = dimensions;
const maxWidth = 1920;
const scale = maxWidth / width;
const scaledHeight = Math.round(height * scale);

// Optimize hero image URL with Sanity transformations while preserving aspect ratio
const optimizedHeroImageUrl = urlFor(heroImage).width(maxWidth).height(scaledHeight).auto('format').url();
---

<script>
  import Lenis from 'lenis';

  const lenis = new Lenis({
    duration: 1.2,
    easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
  });

  function raf(time) {
    lenis.raf(time);
    requestAnimationFrame(raf);
  }

  requestAnimationFrame(raf);
</script>

<PageLayout metadata={metadata}>
  <Hero class="hero-section" subtitle={description}>
    <!-- Hero Background -->
    <Fragment slot="bg">
      <div
        class="absolute inset-0 size-full bg-black opacity-50"
        style={`view-transition-name: ${treatmentId}-bgOverlay`}
      >
      </div>
      <Image
        src={optimizedHeroImageUrl}
        alt={heroImage.alt}
        width={maxWidth}
        height={scaledHeight}
        loading="eager"
        decoding="async"
        class="relative size-full z-[-1] hero-image object-cover"
        style={`view-transition-name: ${treatmentId}-bgImage`}
      />
    </Fragment>
    <!-- Hero Title -->
    <Fragment slot="title">
      <span style={`view-transition-name: ${treatmentId}-title`}>{title}</span>
    </Fragment>
  </Hero>
  <slot />
  <TreatmentAreas
    title="Common Treatment Areas"
    items={treatmentAreas}
    image={treatmentAreasImage}
    classes={{ container: 'md:h-[500px]' }}
  >
    <Fragment slot="bg">
      <div class="absolute inset-0 size-full bg-[#D3C2AE]"></div>
    </Fragment>
  </TreatmentAreas>
  {
    beforeAfterImages && (
      <section class="py-16">
        <div class="container mx-auto px-4">
          <h2 class="text-3xl font-bold text-center mb-8">Before & After Results</h2>
          <Carousel
            slides={beforeAfterImages.map((image) => ({
              backgroundImage: {
                src: image.src,
                alt: image.alt,
              },
              action: {
                type: 'button',
              },
            }))}
          />
        </div>
      </section>
    )
  }
  <FAQ title="Frequently Asked Questions" items={faqItems} />
</PageLayout>
