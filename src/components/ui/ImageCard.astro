---
import type { HTMLTag } from 'astro/types';
import type { Image } from '~/types';
import type { CallToAction } from '~/types';
import ImageComponent from '~/components/common/Image.astro';
import { Icon } from 'astro-icon/components';

interface Props {
  ['as']?: HTMLTag;
  id?: string;
  title?: string;
  backgroundImage?: Image;
  description?: string;
  benefits?: string[];
  action?: CallToAction;
  tagline?: string;
  containerClass?: string;
}

const { as = 'div', id, title, backgroundImage, action, tagline, containerClass, ...rest } = Astro.props;
const CardTag = as;
---

<CardTag class:list={['rounded-2xl overflow-hidden', containerClass]} {...rest}>
  {
    backgroundImage && (
      <a href={action?.href} class="group relative rounded-t-2xl overflow-hidden" data-slide-id={id}>
        <ImageComponent
          src={backgroundImage.src}
          alt={backgroundImage.alt || title}
          class="group-hover:scale-110 w-full h-full object-cover transition-all duration-300"
          width={1920}
          height={1080}
        />
        <div class="absolute inset-0 flex items-end z-[1] p-4 bg-gradient-to-t from-black/70 to-transparent">
          <div>
            {tagline && (
              <h4 class="text-sm inline-block py-2 px-4 bg-secondary text-white rounded-full mb-2">{tagline}</h4>
            )}
            {title && (
              <h3 class={`text-2xl font-semibold mb-2 overflow-hidden ${backgroundImage ? 'text-white' : 'text-dark'}`}>
                <span class="block" style={`view-transition-name: ${id}-title`}>
                  {title}
                </span>
              </h3>
            )}
          </div>
        </div>
        <div
          class:list={[
            'absolute top-2 right-2',
            'opacity-100 translate-y-0 transition-[opacity,transform] duration-300',
            'md:opacity-0 md:-translate-y-12 md:group-hover:opacity-100 md:group-hover:translate-y-0',
          ]}
        >
          <div class="btn btn-accent text-sm py-2 px-3 flex items-center gap-1">
            Learn more <Icon name="cuida:open-in-new-tab-outline" class="w-4 h-4" />
          </div>
        </div>
      </a>
    )
  }
  {
    /* <div class="relative rounded-b-2xl bg-white flex flex-col items-start px-6 py-4 text-start">
              {slide.description && <p class="text-medium mb-4 text-dark/80" set:html={slide.description} />}

              {slide.benefits && slide.benefits.length > 0 && (
                <ul class="space-y-2 mb-6">
                  {slide.benefits.map((benefit) => (
                    <li class="flex items-center text-dark/90">
                      <Icon name="tabler:check" class="w-5 h-5 mr-2 text-secondary" />
                      <Fragment set:html={benefit} />
                    </li>
                  ))}
                </ul>
              )}
            </div> */
  }
</CardTag>

<script>
  document.querySelectorAll('a[data-slide-id]').forEach((link) => {
    link.addEventListener('click', () => {
      const slideId = link.getAttribute('data-slide-id');
      if (!slideId) return;

      const image = link.querySelector('img') as HTMLImageElement;
      const overlay = link.querySelector('div[class*="absolute inset-0"]') as HTMLDivElement;

      if (image) {
        image.style.viewTransitionName = `${slideId}-bgImage`;
      }
      if (overlay) {
        overlay.style.viewTransitionName = `${slideId}-bgOverlay`;
      }
    });
  });
</script>
