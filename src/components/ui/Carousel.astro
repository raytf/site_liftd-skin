---
import type { Image } from '~/types';
import type { CallToAction } from '~/types';
import ImageComponent from '~/components/common/Image.astro';

interface Props {
  slides?: Array<{
    title?: string;
    backgroundImage?: Image;
    description?: string;
    benefits?: string[];
    action?: CallToAction;
  }>;
}

const { slides = [] } = Astro.props;
---

<ul class="carousel">
  {
    slides.map((slide) => (
      <li class="slide rounded-2xl overflow-hidden">
        {slide.backgroundImage && (
          <a href={slide.action?.href} class="group relative rounded-t-2xl overflow-hidden">
            <ImageComponent
              src={slide.backgroundImage.src}
              alt={slide.backgroundImage.alt || slide.title}
              class="group-hover:scale-110 w-full h-full object-cover transition-all duration-300"
              style={`view-transition-name: ${slide.backgroundImage.id}`}
              width={1920}
              height={1080}
            />
            <div class="absolute inset-0 flex items-end z-[1] p-4 bg-gradient-to-t from-black/70 to-transparent">
              {slide.title && (
                <h3
                  class={`text-2xl font-semibold mb-2 overflow-hidden ${slide.backgroundImage ? 'text-white' : 'text-dark'}`}
                >
                  <span class="block">{slide.title}</span>
                </h3>
              )}
            </div>
            <div
              class:list={[
                'absolute top-2 right-2',
                'opacity-100 translate-y-0 transition-[opacity,transform] duration-300',
                'md:opacity-0 md:-translate-y-12 md:group-hover:opacity-100 md:group-hover:translate-y-0',
              ]}
            >
              <div class="btn btn-accent text-sm py-2 px-3">Learn more</div>
            </div>
          </a>
        )}
        {/* <div class="relative rounded-b-2xl bg-white flex flex-col items-start px-6 py-4 text-start">
          {slide.description && <p class="text-medium mb-4 text-dark/80" set:html={slide.description} />}

          {slide.benefits && slide.benefits.length > 0 && (
            <ul class="space-y-2 mb-6">
              {slide.benefits.map((benefit) => (
                <li class="flex items-center text-dark/90">
                  <Icon name="tabler:check" class="w-5 h-5 mr-2 text-secondary" />
                  <Fragment set:html={benefit} />
                </li>
              ))}
            </ul>
          )}
        </div> */}
      </li>
    ))
  }
</ul>

<style>
  .carousel {
    anchor-name: --carousel;
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 100%;
    gap: 2rem;

    overflow-x: scroll;
    scroll-snap-type: x mandatory;

    scroll-marker-group: after;

    > li {
      scroll-snap-align: center;
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    .carousel {
      scroll-behavior: smooth;
    }
  }
  @media (min-width: 768px) {
    .carousel {
      grid-auto-flow: row;
      grid-template-columns: repeat(2, 1fr);
      overflow-x: visible;
      scroll-snap-type: none;
    }
    .carousel::scroll-marker-group {
      display: none;
    }
    .carousel::scroll-button(*) {
      display: none;
    }
  }

  .slide {
    position: relative;
    border-radius: 0.5rem;
  }

  .content {
    position: relative;
    z-index: 1;
    padding: 2rem;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  /* SCROLL MARKERS */

  .carousel::scroll-marker-group {
    display: flex;
    justify-content: center;
    gap: 1rem;
    height: 20px;
    margin-block-start: 1rem;
  }

  .carousel li.slide::scroll-marker {
    content: ' ';
    border: 2px solid CanvasText;
    border-radius: 100%;
    height: 20px;
    width: 20px;
  }

  .carousel li.slide::scroll-marker:hover,
  .carousel li.slide::scroll-marker:focus-visible {
    background: LinkText;
  }

  .carousel li.slide::scroll-marker:target-current {
    background: CanvasText;
  }

  /* SCROLL BUTTONS */

  .carousel::scroll-button(*) {
    position: absolute;
    position-anchor: --carousel;
    height: 50%;
    background: transparent;
    border: none;
  }

  .carousel::scroll-button(left) {
    content: '<';
    position-area: center left;
  }
  .carousel::scroll-button(right) {
    content: '>';
    position-area: center right;
  }
</style>
